#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SedenaServices.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Sedena")]
	public partial class DBSedenaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertActividad(Actividad instance);
    partial void UpdateActividad(Actividad instance);
    partial void DeleteActividad(Actividad instance);
    partial void InsertAgente(Agente instance);
    partial void UpdateAgente(Agente instance);
    partial void DeleteAgente(Agente instance);
    partial void InsertArma(Arma instance);
    partial void UpdateArma(Arma instance);
    partial void DeleteArma(Arma instance);
    partial void InsertCatalogo_IC(Catalogo_IC instance);
    partial void UpdateCatalogo_IC(Catalogo_IC instance);
    partial void DeleteCatalogo_IC(Catalogo_IC instance);
    partial void InsertEncargado(Encargado instance);
    partial void UpdateEncargado(Encargado instance);
    partial void DeleteEncargado(Encargado instance);
    partial void InsertConductor(Conductor instance);
    partial void UpdateConductor(Conductor instance);
    partial void DeleteConductor(Conductor instance);
    partial void InsertFuncion(Funcion instance);
    partial void UpdateFuncion(Funcion instance);
    partial void DeleteFuncion(Funcion instance);
    partial void InsertSesion(Sesion instance);
    partial void UpdateSesion(Sesion instance);
    partial void DeleteSesion(Sesion instance);
    partial void InsertTirador(Tirador instance);
    partial void UpdateTirador(Tirador instance);
    partial void DeleteTirador(Tirador instance);
    partial void InsertVehiculo(Vehiculo instance);
    partial void UpdateVehiculo(Vehiculo instance);
    partial void DeleteVehiculo(Vehiculo instance);
        #endregion

        public DBSedenaDataContext(string connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }
		public DBSedenaDataContext() :
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SedenaConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}

		public DBSedenaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBSedenaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBSedenaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Actividad> Actividad
		{
			get
			{
				return this.GetTable<Actividad>();
			}
		}
		
		public System.Data.Linq.Table<Agente> Agente
		{
			get
			{
				return this.GetTable<Agente>();
			}
		}
		
		public System.Data.Linq.Table<Arma> Arma
		{
			get
			{
				return this.GetTable<Arma>();
			}
		}
		
		public System.Data.Linq.Table<Catalogo_IC> Catalogo_IC
		{
			get
			{
				return this.GetTable<Catalogo_IC>();
			}
		}
		
		public System.Data.Linq.Table<Encargado> Encargado
		{
			get
			{
				return this.GetTable<Encargado>();
			}
		}
		
		public System.Data.Linq.Table<Conductor> Conductor
		{
			get
			{
				return this.GetTable<Conductor>();
			}
		}
		
		public System.Data.Linq.Table<Funcion> Funcion
		{
			get
			{
				return this.GetTable<Funcion>();
			}
		}
		
		public System.Data.Linq.Table<Incidentes_Conductor> Incidentes_Conductor
		{
			get
			{
				return this.GetTable<Incidentes_Conductor>();
			}
		}
		
		public System.Data.Linq.Table<Logros_IT> Logros_IT
		{
			get
			{
				return this.GetTable<Logros_IT>();
			}
		}
		
		public System.Data.Linq.Table<Logros_IC> Logros_IC
		{
			get
			{
				return this.GetTable<Logros_IC>();
			}
		}
		
		public System.Data.Linq.Table<Sesion> Sesion
		{
			get
			{
				return this.GetTable<Sesion>();
			}
		}
		
		public System.Data.Linq.Table<Tirador> Tirador
		{
			get
			{
				return this.GetTable<Tirador>();
			}
		}
		
		public System.Data.Linq.Table<Vehiculo> Vehiculo
		{
			get
			{
				return this.GetTable<Vehiculo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Actividad")]
	public partial class Actividad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Actividad;
		
		private string _Nombre;
		
		private string _Dificultad;
		
		private string _Tipo;
		
		private EntitySet<Sesion> _Sesion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_ActividadChanging(int value);
    partial void OnId_ActividadChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDificultadChanging(string value);
    partial void OnDificultadChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    #endregion
		
		public Actividad()
		{
			this._Sesion = new EntitySet<Sesion>(new Action<Sesion>(this.attach_Sesion), new Action<Sesion>(this.detach_Sesion));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Actividad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Actividad
		{
			get
			{
				return this._Id_Actividad;
			}
			set
			{
				if ((this._Id_Actividad != value))
				{
					this.OnId_ActividadChanging(value);
					this.SendPropertyChanging();
					this._Id_Actividad = value;
					this.SendPropertyChanged("Id_Actividad");
					this.OnId_ActividadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(30)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dificultad", DbType="VarChar(20)")]
		public string Dificultad
		{
			get
			{
				return this._Dificultad;
			}
			set
			{
				if ((this._Dificultad != value))
				{
					this.OnDificultadChanging(value);
					this.SendPropertyChanging();
					this._Dificultad = value;
					this.SendPropertyChanged("Dificultad");
					this.OnDificultadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="VarChar(20)")]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Actividad_Sesion", Storage="_Sesion", ThisKey="Id_Actividad", OtherKey="Id_Actividad")]
		public EntitySet<Sesion> Sesion
		{
			get
			{
				return this._Sesion;
			}
			set
			{
				this._Sesion.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sesion(Sesion entity)
		{
			this.SendPropertyChanging();
			entity.Actividad = this;
		}
		
		private void detach_Sesion(Sesion entity)
		{
			this.SendPropertyChanging();
			entity.Actividad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Agente")]
	public partial class Agente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Agente;
		
		private string _Matricula;
		
		private string _Grado;
		
		private string _Nombre;
		
		private string _Distintivo;
		
		private EntitySet<Encargado> _Encargado;
		
		private EntitySet<Funcion> _Funcion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_AgenteChanging(int value);
    partial void OnId_AgenteChanged();
    partial void OnMatriculaChanging(string value);
    partial void OnMatriculaChanged();
    partial void OnGradoChanging(string value);
    partial void OnGradoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDistintivoChanging(string value);
    partial void OnDistintivoChanged();
    #endregion
		
		public Agente()
		{
			this._Encargado = new EntitySet<Encargado>(new Action<Encargado>(this.attach_Encargado), new Action<Encargado>(this.detach_Encargado));
			this._Funcion = new EntitySet<Funcion>(new Action<Funcion>(this.attach_Funcion), new Action<Funcion>(this.detach_Funcion));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Agente", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Agente
		{
			get
			{
				return this._Id_Agente;
			}
			set
			{
				if ((this._Id_Agente != value))
				{
					this.OnId_AgenteChanging(value);
					this.SendPropertyChanging();
					this._Id_Agente = value;
					this.SendPropertyChanged("Id_Agente");
					this.OnId_AgenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matricula", DbType="VarChar(30)")]
		public string Matricula
		{
			get
			{
				return this._Matricula;
			}
			set
			{
				if ((this._Matricula != value))
				{
					this.OnMatriculaChanging(value);
					this.SendPropertyChanging();
					this._Matricula = value;
					this.SendPropertyChanged("Matricula");
					this.OnMatriculaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grado", DbType="VarChar(30)")]
		public string Grado
		{
			get
			{
				return this._Grado;
			}
			set
			{
				if ((this._Grado != value))
				{
					this.OnGradoChanging(value);
					this.SendPropertyChanging();
					this._Grado = value;
					this.SendPropertyChanged("Grado");
					this.OnGradoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(40)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distintivo", DbType="VarChar(30)")]
		public string Distintivo
		{
			get
			{
				return this._Distintivo;
			}
			set
			{
				if ((this._Distintivo != value))
				{
					this.OnDistintivoChanging(value);
					this.SendPropertyChanging();
					this._Distintivo = value;
					this.SendPropertyChanged("Distintivo");
					this.OnDistintivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agente_Encargado", Storage="_Encargado", ThisKey="Id_Agente", OtherKey="Id_Agente")]
		public EntitySet<Encargado> Encargado
		{
			get
			{
				return this._Encargado;
			}
			set
			{
				this._Encargado.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agente_Funcion", Storage="_Funcion", ThisKey="Id_Agente", OtherKey="Id_Agente")]
		public EntitySet<Funcion> Funcion
		{
			get
			{
				return this._Funcion;
			}
			set
			{
				this._Funcion.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Encargado(Encargado entity)
		{
			this.SendPropertyChanging();
			entity.Agente = this;
		}
		
		private void detach_Encargado(Encargado entity)
		{
			this.SendPropertyChanging();
			entity.Agente = null;
		}
		
		private void attach_Funcion(Funcion entity)
		{
			this.SendPropertyChanging();
			entity.Agente = this;
		}
		
		private void detach_Funcion(Funcion entity)
		{
			this.SendPropertyChanging();
			entity.Agente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Arma")]
	public partial class Arma : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Arma;
		
		private string _Nombre;
		
		private string _Caracteristicas;
		
		private EntitySet<Tirador> _Tirador;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_ArmaChanging(int value);
    partial void OnId_ArmaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnCaracteristicasChanging(string value);
    partial void OnCaracteristicasChanged();
    #endregion
		
		public Arma()
		{
			this._Tirador = new EntitySet<Tirador>(new Action<Tirador>(this.attach_Tirador), new Action<Tirador>(this.detach_Tirador));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Arma", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Arma
		{
			get
			{
				return this._Id_Arma;
			}
			set
			{
				if ((this._Id_Arma != value))
				{
					this.OnId_ArmaChanging(value);
					this.SendPropertyChanging();
					this._Id_Arma = value;
					this.SendPropertyChanged("Id_Arma");
					this.OnId_ArmaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(30)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caracteristicas", DbType="VarChar(MAX)")]
		public string Caracteristicas
		{
			get
			{
				return this._Caracteristicas;
			}
			set
			{
				if ((this._Caracteristicas != value))
				{
					this.OnCaracteristicasChanging(value);
					this.SendPropertyChanging();
					this._Caracteristicas = value;
					this.SendPropertyChanged("Caracteristicas");
					this.OnCaracteristicasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Arma_Tirador", Storage="_Tirador", ThisKey="Id_Arma", OtherKey="Id_Arma")]
		public EntitySet<Tirador> Tirador
		{
			get
			{
				return this._Tirador;
			}
			set
			{
				this._Tirador.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tirador(Tirador entity)
		{
			this.SendPropertyChanging();
			entity.Arma = this;
		}
		
		private void detach_Tirador(Tirador entity)
		{
			this.SendPropertyChanging();
			entity.Arma = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalogo_IC")]
	public partial class Catalogo_IC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Incidente;
		
		private string _Nombre;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_IncidenteChanging(int value);
    partial void OnId_IncidenteChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Catalogo_IC()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Incidente", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Incidente
		{
			get
			{
				return this._Id_Incidente;
			}
			set
			{
				if ((this._Id_Incidente != value))
				{
					this.OnId_IncidenteChanging(value);
					this.SendPropertyChanging();
					this._Id_Incidente = value;
					this.SendPropertyChanged("Id_Incidente");
					this.OnId_IncidenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(30)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Encargado")]
	public partial class Encargado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Encargado;
		
		private string _Tipo_Encargado;
		
		private string _Pass;
		
		private System.Nullable<int> _Id_Agente;
		
		private EntitySet<Sesion> _Sesion;
		
		private EntityRef<Agente> _Agente;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_EncargadoChanging(int value);
    partial void OnId_EncargadoChanged();
    partial void OnTipo_EncargadoChanging(string value);
    partial void OnTipo_EncargadoChanged();
    partial void OnPassChanging(string value);
    partial void OnPassChanged();
    partial void OnId_AgenteChanging(System.Nullable<int> value);
    partial void OnId_AgenteChanged();
    #endregion
		
		public Encargado()
		{
			this._Sesion = new EntitySet<Sesion>(new Action<Sesion>(this.attach_Sesion), new Action<Sesion>(this.detach_Sesion));
			this._Agente = default(EntityRef<Agente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Encargado", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Encargado
		{
			get
			{
				return this._Id_Encargado;
			}
			set
			{
				if ((this._Id_Encargado != value))
				{
					this.OnId_EncargadoChanging(value);
					this.SendPropertyChanging();
					this._Id_Encargado = value;
					this.SendPropertyChanged("Id_Encargado");
					this.OnId_EncargadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo_Encargado", DbType="VarChar(20)")]
		public string Tipo_Encargado
		{
			get
			{
				return this._Tipo_Encargado;
			}
			set
			{
				if ((this._Tipo_Encargado != value))
				{
					this.OnTipo_EncargadoChanging(value);
					this.SendPropertyChanging();
					this._Tipo_Encargado = value;
					this.SendPropertyChanged("Tipo_Encargado");
					this.OnTipo_EncargadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="VarChar(30)")]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Agente", DbType="Int")]
		public System.Nullable<int> Id_Agente
		{
			get
			{
				return this._Id_Agente;
			}
			set
			{
				if ((this._Id_Agente != value))
				{
					if (this._Agente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_AgenteChanging(value);
					this.SendPropertyChanging();
					this._Id_Agente = value;
					this.SendPropertyChanged("Id_Agente");
					this.OnId_AgenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Encargado_Sesion", Storage="_Sesion", ThisKey="Id_Encargado", OtherKey="Id_Encargado")]
		public EntitySet<Sesion> Sesion
		{
			get
			{
				return this._Sesion;
			}
			set
			{
				this._Sesion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agente_Encargado", Storage="_Agente", ThisKey="Id_Agente", OtherKey="Id_Agente", IsForeignKey=true)]
		public Agente Agente
		{
			get
			{
				return this._Agente.Entity;
			}
			set
			{
				Agente previousValue = this._Agente.Entity;
				if (((previousValue != value) 
							|| (this._Agente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Agente.Entity = null;
						previousValue.Encargado.Remove(this);
					}
					this._Agente.Entity = value;
					if ((value != null))
					{
						value.Encargado.Add(this);
						this._Id_Agente = value.Id_Agente;
					}
					else
					{
						this._Id_Agente = default(Nullable<int>);
					}
					this.SendPropertyChanged("Agente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sesion(Sesion entity)
		{
			this.SendPropertyChanging();
			entity.Encargado = this;
		}
		
		private void detach_Sesion(Sesion entity)
		{
			this.SendPropertyChanging();
			entity.Encargado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Conductor")]
	public partial class Conductor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Funcion;
		
		private System.Nullable<int> _Id_Vehiculo;
		
		private EntityRef<Funcion> _Funcion;
		
		private EntityRef<Vehiculo> _Vehiculo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_FuncionChanging(int value);
    partial void OnId_FuncionChanged();
    partial void OnId_VehiculoChanging(System.Nullable<int> value);
    partial void OnId_VehiculoChanged();
    #endregion
		
		public Conductor()
		{
			this._Funcion = default(EntityRef<Funcion>);
			this._Vehiculo = default(EntityRef<Vehiculo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Funcion", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Funcion
		{
			get
			{
				return this._Id_Funcion;
			}
			set
			{
				if ((this._Id_Funcion != value))
				{
					if (this._Funcion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_FuncionChanging(value);
					this.SendPropertyChanging();
					this._Id_Funcion = value;
					this.SendPropertyChanged("Id_Funcion");
					this.OnId_FuncionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Vehiculo", DbType="Int")]
		public System.Nullable<int> Id_Vehiculo
		{
			get
			{
				return this._Id_Vehiculo;
			}
			set
			{
				if ((this._Id_Vehiculo != value))
				{
					if (this._Vehiculo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_VehiculoChanging(value);
					this.SendPropertyChanging();
					this._Id_Vehiculo = value;
					this.SendPropertyChanged("Id_Vehiculo");
					this.OnId_VehiculoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Funcion_Conductor", Storage="_Funcion", ThisKey="Id_Funcion", OtherKey="Id_Funcion", IsForeignKey=true)]
		public Funcion Funcion
		{
			get
			{
				return this._Funcion.Entity;
			}
			set
			{
				Funcion previousValue = this._Funcion.Entity;
				if (((previousValue != value) 
							|| (this._Funcion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Funcion.Entity = null;
						previousValue.Conductor = null;
					}
					this._Funcion.Entity = value;
					if ((value != null))
					{
						value.Conductor = this;
						this._Id_Funcion = value.Id_Funcion;
					}
					else
					{
						this._Id_Funcion = default(int);
					}
					this.SendPropertyChanged("Funcion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehiculo_Conductor", Storage="_Vehiculo", ThisKey="Id_Vehiculo", OtherKey="Id_Vehiculo", IsForeignKey=true)]
		public Vehiculo Vehiculo
		{
			get
			{
				return this._Vehiculo.Entity;
			}
			set
			{
				Vehiculo previousValue = this._Vehiculo.Entity;
				if (((previousValue != value) 
							|| (this._Vehiculo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vehiculo.Entity = null;
						previousValue.Conductor.Remove(this);
					}
					this._Vehiculo.Entity = value;
					if ((value != null))
					{
						value.Conductor.Add(this);
						this._Id_Vehiculo = value.Id_Vehiculo;
					}
					else
					{
						this._Id_Vehiculo = default(Nullable<int>);
					}
					this.SendPropertyChanged("Vehiculo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Funcion")]
	public partial class Funcion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Funcion;
		
		private System.Nullable<int> _Id_Agente;
		
		private System.Nullable<int> _Id_Sesion;
		
		private string _Funcion1;
		
		private EntityRef<Conductor> _Conductor;
		
		private EntityRef<Tirador> _Tirador;
		
		private EntityRef<Agente> _Agente;
		
		private EntityRef<Sesion> _Sesion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_FuncionChanging(int value);
    partial void OnId_FuncionChanged();
    partial void OnId_AgenteChanging(System.Nullable<int> value);
    partial void OnId_AgenteChanged();
    partial void OnId_SesionChanging(System.Nullable<int> value);
    partial void OnId_SesionChanged();
    partial void OnFuncion1Changing(string value);
    partial void OnFuncion1Changed();
    #endregion
		
		public Funcion()
		{
			this._Conductor = default(EntityRef<Conductor>);
			this._Tirador = default(EntityRef<Tirador>);
			this._Agente = default(EntityRef<Agente>);
			this._Sesion = default(EntityRef<Sesion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Funcion", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Funcion
		{
			get
			{
				return this._Id_Funcion;
			}
			set
			{
				if ((this._Id_Funcion != value))
				{
					this.OnId_FuncionChanging(value);
					this.SendPropertyChanging();
					this._Id_Funcion = value;
					this.SendPropertyChanged("Id_Funcion");
					this.OnId_FuncionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Agente", DbType="Int")]
		public System.Nullable<int> Id_Agente
		{
			get
			{
				return this._Id_Agente;
			}
			set
			{
				if ((this._Id_Agente != value))
				{
					if (this._Agente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_AgenteChanging(value);
					this.SendPropertyChanging();
					this._Id_Agente = value;
					this.SendPropertyChanged("Id_Agente");
					this.OnId_AgenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Sesion", DbType="Int")]
		public System.Nullable<int> Id_Sesion
		{
			get
			{
				return this._Id_Sesion;
			}
			set
			{
				if ((this._Id_Sesion != value))
				{
					if (this._Sesion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_SesionChanging(value);
					this.SendPropertyChanging();
					this._Id_Sesion = value;
					this.SendPropertyChanged("Id_Sesion");
					this.OnId_SesionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Funcion", Storage="_Funcion1", DbType="VarChar(30)")]
		public string Funcion1
		{
			get
			{
				return this._Funcion1;
			}
			set
			{
				if ((this._Funcion1 != value))
				{
					this.OnFuncion1Changing(value);
					this.SendPropertyChanging();
					this._Funcion1 = value;
					this.SendPropertyChanged("Funcion1");
					this.OnFuncion1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Funcion_Conductor", Storage="_Conductor", ThisKey="Id_Funcion", OtherKey="Id_Funcion", IsUnique=true, IsForeignKey=false)]
		public Conductor Conductor
		{
			get
			{
				return this._Conductor.Entity;
			}
			set
			{
				Conductor previousValue = this._Conductor.Entity;
				if (((previousValue != value) 
							|| (this._Conductor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Conductor.Entity = null;
						previousValue.Funcion = null;
					}
					this._Conductor.Entity = value;
					if ((value != null))
					{
						value.Funcion = this;
					}
					this.SendPropertyChanged("Conductor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Funcion_Tirador", Storage="_Tirador", ThisKey="Id_Funcion", OtherKey="Id_Funcion", IsUnique=true, IsForeignKey=false)]
		public Tirador Tirador
		{
			get
			{
				return this._Tirador.Entity;
			}
			set
			{
				Tirador previousValue = this._Tirador.Entity;
				if (((previousValue != value) 
							|| (this._Tirador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tirador.Entity = null;
						previousValue.Funcion = null;
					}
					this._Tirador.Entity = value;
					if ((value != null))
					{
						value.Funcion = this;
					}
					this.SendPropertyChanged("Tirador");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Agente_Funcion", Storage="_Agente", ThisKey="Id_Agente", OtherKey="Id_Agente", IsForeignKey=true)]
		public Agente Agente
		{
			get
			{
				return this._Agente.Entity;
			}
			set
			{
				Agente previousValue = this._Agente.Entity;
				if (((previousValue != value) 
							|| (this._Agente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Agente.Entity = null;
						previousValue.Funcion.Remove(this);
					}
					this._Agente.Entity = value;
					if ((value != null))
					{
						value.Funcion.Add(this);
						this._Id_Agente = value.Id_Agente;
					}
					else
					{
						this._Id_Agente = default(Nullable<int>);
					}
					this.SendPropertyChanged("Agente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sesion_Funcion", Storage="_Sesion", ThisKey="Id_Sesion", OtherKey="Id_Sesion", IsForeignKey=true)]
		public Sesion Sesion
		{
			get
			{
				return this._Sesion.Entity;
			}
			set
			{
				Sesion previousValue = this._Sesion.Entity;
				if (((previousValue != value) 
							|| (this._Sesion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sesion.Entity = null;
						previousValue.Funcion.Remove(this);
					}
					this._Sesion.Entity = value;
					if ((value != null))
					{
						value.Funcion.Add(this);
						this._Id_Sesion = value.Id_Sesion;
					}
					else
					{
						this._Id_Sesion = default(Nullable<int>);
					}
					this.SendPropertyChanged("Sesion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Incidentes_Conductor")]
	public partial class Incidentes_Conductor
	{
		
		private System.Nullable<int> _Id_Incidente;
		
		private System.Nullable<int> _Id_Funcion;
		
		private System.Nullable<int> _Numero_Incidente;
		
		public Incidentes_Conductor()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Incidente", DbType="Int")]
		public System.Nullable<int> Id_Incidente
		{
			get
			{
				return this._Id_Incidente;
			}
			set
			{
				if ((this._Id_Incidente != value))
				{
					this._Id_Incidente = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Funcion", DbType="Int")]
		public System.Nullable<int> Id_Funcion
		{
			get
			{
				return this._Id_Funcion;
			}
			set
			{
				if ((this._Id_Funcion != value))
				{
					this._Id_Funcion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero_Incidente", DbType="Int")]
		public System.Nullable<int> Numero_Incidente
		{
			get
			{
				return this._Numero_Incidente;
			}
			set
			{
				if ((this._Numero_Incidente != value))
				{
					this._Numero_Incidente = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Logros_IT")]
	public partial class Logros_IT
	{
		
		private System.Nullable<int> _Id_Funcion;
		
		private string _Nombre;
		
		public Logros_IT()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Funcion", DbType="Int")]
		public System.Nullable<int> Id_Funcion
		{
			get
			{
				return this._Id_Funcion;
			}
			set
			{
				if ((this._Id_Funcion != value))
				{
					this._Id_Funcion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(30)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this._Nombre = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Logros_IC")]
	public partial class Logros_IC
	{
		
		private System.Nullable<int> _Id_Funcion;
		
		private string _Nombre;
		
		public Logros_IC()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Funcion", DbType="Int")]
		public System.Nullable<int> Id_Funcion
		{
			get
			{
				return this._Id_Funcion;
			}
			set
			{
				if ((this._Id_Funcion != value))
				{
					this._Id_Funcion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this._Nombre = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sesion")]
	public partial class Sesion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Sesion;
		
		private System.Nullable<int> _Id_Actividad;
		
		private string _Entorno;
		
		private string _Fecha;
		
		private System.Nullable<int> _Id_Encargado;
		
		private EntitySet<Funcion> _Funcion;
		
		private EntityRef<Actividad> _Actividad;
		
		private EntityRef<Encargado> _Encargado;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_SesionChanging(int value);
    partial void OnId_SesionChanged();
    partial void OnId_ActividadChanging(System.Nullable<int> value);
    partial void OnId_ActividadChanged();
    partial void OnEntornoChanging(string value);
    partial void OnEntornoChanged();
    partial void OnFechaChanging(string value);
    partial void OnFechaChanged();
    partial void OnId_EncargadoChanging(System.Nullable<int> value);
    partial void OnId_EncargadoChanged();
    #endregion
		
		public Sesion()
		{
			this._Funcion = new EntitySet<Funcion>(new Action<Funcion>(this.attach_Funcion), new Action<Funcion>(this.detach_Funcion));
			this._Actividad = default(EntityRef<Actividad>);
			this._Encargado = default(EntityRef<Encargado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Sesion", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Sesion
		{
			get
			{
				return this._Id_Sesion;
			}
			set
			{
				if ((this._Id_Sesion != value))
				{
					this.OnId_SesionChanging(value);
					this.SendPropertyChanging();
					this._Id_Sesion = value;
					this.SendPropertyChanged("Id_Sesion");
					this.OnId_SesionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Actividad", DbType="Int")]
		public System.Nullable<int> Id_Actividad
		{
			get
			{
				return this._Id_Actividad;
			}
			set
			{
				if ((this._Id_Actividad != value))
				{
					if (this._Actividad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_ActividadChanging(value);
					this.SendPropertyChanging();
					this._Id_Actividad = value;
					this.SendPropertyChanged("Id_Actividad");
					this.OnId_ActividadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entorno", DbType="VarChar(MAX)")]
		public string Entorno
		{
			get
			{
				return this._Entorno;
			}
			set
			{
				if ((this._Entorno != value))
				{
					this.OnEntornoChanging(value);
					this.SendPropertyChanging();
					this._Entorno = value;
					this.SendPropertyChanged("Entorno");
					this.OnEntornoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="VarChar(MAX)")]
		public string Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Encargado", DbType="Int")]
		public System.Nullable<int> Id_Encargado
		{
			get
			{
				return this._Id_Encargado;
			}
			set
			{
				if ((this._Id_Encargado != value))
				{
					if (this._Encargado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_EncargadoChanging(value);
					this.SendPropertyChanging();
					this._Id_Encargado = value;
					this.SendPropertyChanged("Id_Encargado");
					this.OnId_EncargadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sesion_Funcion", Storage="_Funcion", ThisKey="Id_Sesion", OtherKey="Id_Sesion")]
		public EntitySet<Funcion> Funcion
		{
			get
			{
				return this._Funcion;
			}
			set
			{
				this._Funcion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Actividad_Sesion", Storage="_Actividad", ThisKey="Id_Actividad", OtherKey="Id_Actividad", IsForeignKey=true)]
		public Actividad Actividad
		{
			get
			{
				return this._Actividad.Entity;
			}
			set
			{
				Actividad previousValue = this._Actividad.Entity;
				if (((previousValue != value) 
							|| (this._Actividad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Actividad.Entity = null;
						previousValue.Sesion.Remove(this);
					}
					this._Actividad.Entity = value;
					if ((value != null))
					{
						value.Sesion.Add(this);
						this._Id_Actividad = value.Id_Actividad;
					}
					else
					{
						this._Id_Actividad = default(Nullable<int>);
					}
					this.SendPropertyChanged("Actividad");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Encargado_Sesion", Storage="_Encargado", ThisKey="Id_Encargado", OtherKey="Id_Encargado", IsForeignKey=true)]
		public Encargado Encargado
		{
			get
			{
				return this._Encargado.Entity;
			}
			set
			{
				Encargado previousValue = this._Encargado.Entity;
				if (((previousValue != value) 
							|| (this._Encargado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Encargado.Entity = null;
						previousValue.Sesion.Remove(this);
					}
					this._Encargado.Entity = value;
					if ((value != null))
					{
						value.Sesion.Add(this);
						this._Id_Encargado = value.Id_Encargado;
					}
					else
					{
						this._Id_Encargado = default(Nullable<int>);
					}
					this.SendPropertyChanged("Encargado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Funcion(Funcion entity)
		{
			this.SendPropertyChanging();
			entity.Sesion = this;
		}
		
		private void detach_Funcion(Funcion entity)
		{
			this.SendPropertyChanging();
			entity.Sesion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tirador")]
	public partial class Tirador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Funcion;
		
		private System.Nullable<int> _Id_Arma;
		
		private System.Nullable<bool> _Uso_Correcto;
		
		private System.Nullable<bool> _Mision_Cumplida;
		
		private System.Nullable<int> _Disparos_Realizados;
		
		private System.Nullable<int> _Disparos_Acertados;
		
		private System.Nullable<int> _Disparos_Colateral;
		
		private System.Nullable<int> _Bajas_Militares;
		
		private System.Nullable<int> _Bajas_Colaterales;
		
		private System.Nullable<int> _Bajas_Enemigos;
		
		private EntityRef<Funcion> _Funcion;
		
		private EntityRef<Arma> _Arma;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_FuncionChanging(int value);
    partial void OnId_FuncionChanged();
    partial void OnId_ArmaChanging(System.Nullable<int> value);
    partial void OnId_ArmaChanged();
    partial void OnUso_CorrectoChanging(System.Nullable<bool> value);
    partial void OnUso_CorrectoChanged();
    partial void OnMision_CumplidaChanging(System.Nullable<bool> value);
    partial void OnMision_CumplidaChanged();
    partial void OnDisparos_RealizadosChanging(System.Nullable<int> value);
    partial void OnDisparos_RealizadosChanged();
    partial void OnDisparos_AcertadosChanging(System.Nullable<int> value);
    partial void OnDisparos_AcertadosChanged();
    partial void OnDisparos_ColateralChanging(System.Nullable<int> value);
    partial void OnDisparos_ColateralChanged();
    partial void OnBajas_MilitaresChanging(System.Nullable<int> value);
    partial void OnBajas_MilitaresChanged();
    partial void OnBajas_ColateralesChanging(System.Nullable<int> value);
    partial void OnBajas_ColateralesChanged();
    partial void OnBajas_EnemigosChanging(System.Nullable<int> value);
    partial void OnBajas_EnemigosChanged();
    #endregion
		
		public Tirador()
		{
			this._Funcion = default(EntityRef<Funcion>);
			this._Arma = default(EntityRef<Arma>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Funcion", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Funcion
		{
			get
			{
				return this._Id_Funcion;
			}
			set
			{
				if ((this._Id_Funcion != value))
				{
					if (this._Funcion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_FuncionChanging(value);
					this.SendPropertyChanging();
					this._Id_Funcion = value;
					this.SendPropertyChanged("Id_Funcion");
					this.OnId_FuncionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Arma", DbType="Int")]
		public System.Nullable<int> Id_Arma
		{
			get
			{
				return this._Id_Arma;
			}
			set
			{
				if ((this._Id_Arma != value))
				{
					if (this._Arma.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_ArmaChanging(value);
					this.SendPropertyChanging();
					this._Id_Arma = value;
					this.SendPropertyChanged("Id_Arma");
					this.OnId_ArmaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uso_Correcto", DbType="Bit")]
		public System.Nullable<bool> Uso_Correcto
		{
			get
			{
				return this._Uso_Correcto;
			}
			set
			{
				if ((this._Uso_Correcto != value))
				{
					this.OnUso_CorrectoChanging(value);
					this.SendPropertyChanging();
					this._Uso_Correcto = value;
					this.SendPropertyChanged("Uso_Correcto");
					this.OnUso_CorrectoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mision_Cumplida", DbType="Bit")]
		public System.Nullable<bool> Mision_Cumplida
		{
			get
			{
				return this._Mision_Cumplida;
			}
			set
			{
				if ((this._Mision_Cumplida != value))
				{
					this.OnMision_CumplidaChanging(value);
					this.SendPropertyChanging();
					this._Mision_Cumplida = value;
					this.SendPropertyChanged("Mision_Cumplida");
					this.OnMision_CumplidaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disparos_Realizados", DbType="Int")]
		public System.Nullable<int> Disparos_Realizados
		{
			get
			{
				return this._Disparos_Realizados;
			}
			set
			{
				if ((this._Disparos_Realizados != value))
				{
					this.OnDisparos_RealizadosChanging(value);
					this.SendPropertyChanging();
					this._Disparos_Realizados = value;
					this.SendPropertyChanged("Disparos_Realizados");
					this.OnDisparos_RealizadosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disparos_Acertados", DbType="Int")]
		public System.Nullable<int> Disparos_Acertados
		{
			get
			{
				return this._Disparos_Acertados;
			}
			set
			{
				if ((this._Disparos_Acertados != value))
				{
					this.OnDisparos_AcertadosChanging(value);
					this.SendPropertyChanging();
					this._Disparos_Acertados = value;
					this.SendPropertyChanged("Disparos_Acertados");
					this.OnDisparos_AcertadosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disparos_Colateral", DbType="Int")]
		public System.Nullable<int> Disparos_Colateral
		{
			get
			{
				return this._Disparos_Colateral;
			}
			set
			{
				if ((this._Disparos_Colateral != value))
				{
					this.OnDisparos_ColateralChanging(value);
					this.SendPropertyChanging();
					this._Disparos_Colateral = value;
					this.SendPropertyChanged("Disparos_Colateral");
					this.OnDisparos_ColateralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bajas_Militares", DbType="Int")]
		public System.Nullable<int> Bajas_Militares
		{
			get
			{
				return this._Bajas_Militares;
			}
			set
			{
				if ((this._Bajas_Militares != value))
				{
					this.OnBajas_MilitaresChanging(value);
					this.SendPropertyChanging();
					this._Bajas_Militares = value;
					this.SendPropertyChanged("Bajas_Militares");
					this.OnBajas_MilitaresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bajas_Colaterales", DbType="Int")]
		public System.Nullable<int> Bajas_Colaterales
		{
			get
			{
				return this._Bajas_Colaterales;
			}
			set
			{
				if ((this._Bajas_Colaterales != value))
				{
					this.OnBajas_ColateralesChanging(value);
					this.SendPropertyChanging();
					this._Bajas_Colaterales = value;
					this.SendPropertyChanged("Bajas_Colaterales");
					this.OnBajas_ColateralesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bajas_Enemigos", DbType="Int")]
		public System.Nullable<int> Bajas_Enemigos
		{
			get
			{
				return this._Bajas_Enemigos;
			}
			set
			{
				if ((this._Bajas_Enemigos != value))
				{
					this.OnBajas_EnemigosChanging(value);
					this.SendPropertyChanging();
					this._Bajas_Enemigos = value;
					this.SendPropertyChanged("Bajas_Enemigos");
					this.OnBajas_EnemigosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Funcion_Tirador", Storage="_Funcion", ThisKey="Id_Funcion", OtherKey="Id_Funcion", IsForeignKey=true)]
		public Funcion Funcion
		{
			get
			{
				return this._Funcion.Entity;
			}
			set
			{
				Funcion previousValue = this._Funcion.Entity;
				if (((previousValue != value) 
							|| (this._Funcion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Funcion.Entity = null;
						previousValue.Tirador = null;
					}
					this._Funcion.Entity = value;
					if ((value != null))
					{
						value.Tirador = this;
						this._Id_Funcion = value.Id_Funcion;
					}
					else
					{
						this._Id_Funcion = default(int);
					}
					this.SendPropertyChanged("Funcion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Arma_Tirador", Storage="_Arma", ThisKey="Id_Arma", OtherKey="Id_Arma", IsForeignKey=true)]
		public Arma Arma
		{
			get
			{
				return this._Arma.Entity;
			}
			set
			{
				Arma previousValue = this._Arma.Entity;
				if (((previousValue != value) 
							|| (this._Arma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Arma.Entity = null;
						previousValue.Tirador.Remove(this);
					}
					this._Arma.Entity = value;
					if ((value != null))
					{
						value.Tirador.Add(this);
						this._Id_Arma = value.Id_Arma;
					}
					else
					{
						this._Id_Arma = default(Nullable<int>);
					}
					this.SendPropertyChanged("Arma");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vehiculo")]
	public partial class Vehiculo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Vehiculo;
		
		private string _Placa;
		
		private string _Color;
		
		private string _Marca;
		
		private string _Nombre;
		
		private EntitySet<Conductor> _Conductor;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_VehiculoChanging(int value);
    partial void OnId_VehiculoChanged();
    partial void OnPlacaChanging(string value);
    partial void OnPlacaChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnMarcaChanging(string value);
    partial void OnMarcaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Vehiculo()
		{
			this._Conductor = new EntitySet<Conductor>(new Action<Conductor>(this.attach_Conductor), new Action<Conductor>(this.detach_Conductor));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Vehiculo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_Vehiculo
		{
			get
			{
				return this._Id_Vehiculo;
			}
			set
			{
				if ((this._Id_Vehiculo != value))
				{
					this.OnId_VehiculoChanging(value);
					this.SendPropertyChanging();
					this._Id_Vehiculo = value;
					this.SendPropertyChanged("Id_Vehiculo");
					this.OnId_VehiculoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Placa", DbType="VarChar(30)")]
		public string Placa
		{
			get
			{
				return this._Placa;
			}
			set
			{
				if ((this._Placa != value))
				{
					this.OnPlacaChanging(value);
					this.SendPropertyChanging();
					this._Placa = value;
					this.SendPropertyChanged("Placa");
					this.OnPlacaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="VarChar(30)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marca", DbType="VarChar(30)")]
		public string Marca
		{
			get
			{
				return this._Marca;
			}
			set
			{
				if ((this._Marca != value))
				{
					this.OnMarcaChanging(value);
					this.SendPropertyChanging();
					this._Marca = value;
					this.SendPropertyChanged("Marca");
					this.OnMarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(30)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehiculo_Conductor", Storage="_Conductor", ThisKey="Id_Vehiculo", OtherKey="Id_Vehiculo")]
		public EntitySet<Conductor> Conductor
		{
			get
			{
				return this._Conductor;
			}
			set
			{
				this._Conductor.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Conductor(Conductor entity)
		{
			this.SendPropertyChanging();
			entity.Vehiculo = this;
		}
		
		private void detach_Conductor(Conductor entity)
		{
			this.SendPropertyChanging();
			entity.Vehiculo = null;
		}
	}
}
#pragma warning restore 1591
